{"uid":"1729efba95bee0e1","name":"REP03 - Multiple invalid users register","fullName":"functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest","historyId":"c7fb0c2d21c453b6808744a6610c0991","time":{"start":1683666265749,"stop":1683666274969,"duration":9220},"description":"Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.","descriptionHtml":"<p>Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.</p>\n","status":"failed","statusMessage":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","statusTrace":"org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:129)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1311)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1841)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1806)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeAll","time":{"start":1683666250046,"stop":1683666250097,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1683666265749,"stop":1683666266083,"duration":334},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUpPreconditionSteps","time":{"start":1683666266084,"stop":1683666266412,"duration":328},"status":"passed","steps":[{"name":"Navigate to URL","time":{"start":1683666266087,"stop":1683666266340,"duration":253},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Accept' button to accept 'Terms and conditions'","time":{"start":1683666266341,"stop":1683666266411,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.","status":"failed","statusMessage":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","statusTrace":"org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:129)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1311)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1841)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1806)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n","steps":[{"name":"Click 'Register' tab","time":{"start":1683666266412,"stop":1683666266465,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666266466,"stop":1683666266832,"duration":366},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"earthykiwicityofgod"},{"name":"password","value":"apricot"},{"name":"email","value":" 2 2 lasay64@bandtoo.com"},{"name":"description","value":"I'm looking for minimalist design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666266833,"stop":1683666266895,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666267280,"stop":1683666267324,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666267324,"stop":1683666267664,"duration":340},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"15$cúcumbérleóí!"},{"name":"password","value":"romanholiday"},{"name":"email","value":"azharmali, k001@beraxs.online"},{"name":"description","value":"I'm interested in a retro design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666267665,"stop":1683666267702,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666267958,"stop":1683666268004,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666268004,"stop":1683666268375,"duration":371},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"vegaeggcow"},{"name":"password","value":"K^m1cX411o#Jéáó*/-+"},{"name":"email","value":"shevchukp,avel@kitche,n-t,vs.ru"},{"name":"description","value":"I'm searching for a modern design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666268376,"stop":1683666268429,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666268708,"stop":1683666268751,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666268751,"stop":1683666269161,"duration":410},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"runningfox"},{"name":"password","value":"lAmqw8J51%#3"},{"name":"email","value":"bet!ty@nmm@@@hy+drody,namice...st/ore"},{"name":"description","value":"I prefer designs that have a natural, organic feel."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666269161,"stop":1683666269209,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666269445,"stop":1683666269503,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666269503,"stop":1683666269859,"duration":356},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"marramrye"},{"name":"password","value":"v*u@Ll5H4D27"},{"name":"email","value":"tuyana1984zeyadooo.cloud"},{"name":"description","value":"I'm interested in a minimalist logo design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666269859,"stop":1683666269901,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666270147,"stop":1683666270202,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666270202,"stop":1683666270544,"duration":342},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"singerpie"},{"name":"password","value":"3xT&9G380b4z"},{"name":"email","value":"monilvsluisnmidasonline"},{"name":"description","value":"I'm interested in a modern website design"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666270544,"stop":1683666270582,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666270828,"stop":1683666270879,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666270879,"stop":1683666271183,"duration":304},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"chocolatebar"},{"name":"password","value":"1Oq5PT8&V0RE"},{"name":"email","value":""},{"name":"description","value":"I'm looking for a vintage logo design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666271183,"stop":1683666271225,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666271460,"stop":1683666271505,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666271505,"stop":1683666271878,"duration":373},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"pigwall·e"},{"name":"password","value":"ixX56x3&B9Ht"},{"name":"email","value":"kubrick14@gmailvn.@net"},{"name":"description","value":"I'm looking for a minimalist packaging design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666271878,"stop":1683666271918,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666272172,"stop":1683666272233,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666272233,"stop":1683666273880,"duration":1647},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"oysterduck"},{"name":"password","value":"0L202^Rrv44k"},{"name":"email","value":"rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com"},{"name":"description","value":"I'm interested in a retro poster design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666273881,"stop":1683666273921,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666274162,"stop":1683666274213,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683666274213,"stop":1683666274534,"duration":321},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"doomsayer"},{"name":"password","value":"$6sVL31j8H0y"},{"name":"email","value":"theipwn3g@"},{"name":"description","value":"I'm looking for a modern branding design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683666274534,"stop":1683666274572,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683666274812,"stop":1683666274863,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"38dbff7e2eb8ad85","name":"Page status after registration attempt with email address:  2 2 lasay64@bandtoo.com","source":"38dbff7e2eb8ad85.png","type":"image/png","size":220632},{"uid":"b79f5f0da8682148","name":"Page status after registration attempt with email address: azharmali, k001@beraxs.online","source":"b79f5f0da8682148.png","type":"image/png","size":221442},{"uid":"c97c9af97d499a68","name":"Page status after registration attempt with email address: shevchukp,avel@kitche,n-t,vs.ru","source":"c97c9af97d499a68.png","type":"image/png","size":221632},{"uid":"c7afee82c66b588","name":"Page status after registration attempt with email address: bet!ty@nmm@@@hy+drody,namice...st/ore","source":"c7afee82c66b588.png","type":"image/png","size":223049},{"uid":"2c5fa9a3f221699f","name":"Page status after registration attempt with email address: tuyana1984zeyadooo.cloud","source":"2c5fa9a3f221699f.png","type":"image/png","size":220563},{"uid":"f80dc7ba62e5a4b6","name":"Page status after registration attempt with email address: monilvsluisnmidasonline","source":"f80dc7ba62e5a4b6.png","type":"image/png","size":219641},{"uid":"b87794e5a2ce4d2e","name":"Page status after registration attempt with email address: ","source":"b87794e5a2ce4d2e.png","type":"image/png","size":217832},{"uid":"75e5f496b4f80f63","name":"Page status after registration attempt with email address: kubrick14@gmailvn.@net","source":"75e5f496b4f80f63.png","type":"image/png","size":220579},{"uid":"a5c020590d68cc76","name":"Page status after registration attempt with email address: rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com","source":"a5c020590d68cc76.png","type":"image/png","size":222108},{"uid":"2ebaca390f55bb8","name":"Page status after registration attempt with email address: theipwn3g@","source":"2ebaca390f55bb8.png","type":"image/png","size":219283}],"parameters":[],"stepsCount":31,"attachmentsCount":10,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1683666274864,"stop":1683666274968,"duration":104},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"REP03"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:functionTests.RepeatedSerialDataEntryFromDataSourceTest]/[method:registerMultipleInvalidEmailUsersTest()]"},{"name":"epic","value":"'Repeated serial data entry from data source' functions - These tests covers the verification of the possibility to perform multiple inputs from data stored in a file."},{"name":"story","value":"Multiple invalid users register - User registers multiple accounts from invalid email credentials stored in a file."},{"name":"host","value":"fv-az210-40"},{"name":"thread","value":"2371@fv-az210-40.ForkJoinPool-1-worker-1(24)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"testClass","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"testMethod","value":"registerMultipleInvalidEmailUsersTest"},{"name":"suite","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"severity","value":"trivial"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"trivial","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"c967bad88664e453","reportUrl":"https://horvyjoe.github.io/CodeCool-Vizsgaremek/52//#testresult/c967bad88664e453","status":"failed","statusDetails":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","time":{"start":1683651108149,"stop":1683651115322,"duration":7173}},{"uid":"d078a4ae1eb8de7c","reportUrl":"https://horvyjoe.github.io/CodeCool-Vizsgaremek/51//#testresult/d078a4ae1eb8de7c","status":"failed","statusDetails":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","time":{"start":1683641941573,"stop":1683641948763,"duration":7190}},{"uid":"5e27249e4e2b9a06","reportUrl":"https://horvyjoe.github.io/CodeCool-Vizsgaremek/50//#testresult/5e27249e4e2b9a06","status":"failed","statusDetails":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)","time":{"start":1683583893838,"stop":1683583902456,"duration":8618}}]},"tags":["REP03"]},"source":"1729efba95bee0e1.json","parameterValues":[]}