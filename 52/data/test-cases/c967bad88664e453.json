{"uid":"c967bad88664e453","name":"REP03 - Multiple invalid users register","fullName":"functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest","historyId":"c7fb0c2d21c453b6808744a6610c0991","time":{"start":1683651108149,"stop":1683651115322,"duration":7173},"description":"Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.","descriptionHtml":"<p>Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.</p>\n","status":"failed","statusMessage":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","statusTrace":"org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:129)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1311)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1841)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1806)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeAll","time":{"start":1683651094787,"stop":1683651094802,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1683651108149,"stop":1683651108418,"duration":269},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUpPreconditionSteps","time":{"start":1683651108419,"stop":1683651108630,"duration":211},"status":"passed","steps":[{"name":"Navigate to URL","time":{"start":1683651108424,"stop":1683651108581,"duration":157},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Accept' button to accept 'Terms and conditions'","time":{"start":1683651108582,"stop":1683651108630,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.","status":"failed","statusMessage":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","statusTrace":"org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:129)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1311)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1841)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1806)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n","steps":[{"name":"Click 'Register' tab","time":{"start":1683651108630,"stop":1683651108669,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651108669,"stop":1683651108912,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"earthykiwicityofgod"},{"name":"password","value":"apricot"},{"name":"email","value":" 2 2 lasay64@bandtoo.com"},{"name":"description","value":"I'm looking for minimalist design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651108912,"stop":1683651108947,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651109319,"stop":1683651109359,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651109359,"stop":1683651109612,"duration":253},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"15$cúcumbérleóí!"},{"name":"password","value":"romanholiday"},{"name":"email","value":"azharmali, k001@beraxs.online"},{"name":"description","value":"I'm interested in a retro design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651109612,"stop":1683651109645,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651109890,"stop":1683651109933,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651109933,"stop":1683651110193,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"vegaeggcow"},{"name":"password","value":"K^m1cX411o#Jéáó*/-+"},{"name":"email","value":"shevchukp,avel@kitche,n-t,vs.ru"},{"name":"description","value":"I'm searching for a modern design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651110193,"stop":1683651110226,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651110457,"stop":1683651110492,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651110492,"stop":1683651110758,"duration":266},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"runningfox"},{"name":"password","value":"lAmqw8J51%#3"},{"name":"email","value":"bet!ty@nmm@@@hy+drody,namice...st/ore"},{"name":"description","value":"I prefer designs that have a natural, organic feel."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651110758,"stop":1683651110791,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651111025,"stop":1683651111059,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651111059,"stop":1683651111303,"duration":244},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"marramrye"},{"name":"password","value":"v*u@Ll5H4D27"},{"name":"email","value":"tuyana1984zeyadooo.cloud"},{"name":"description","value":"I'm interested in a minimalist logo design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651111303,"stop":1683651111340,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651111576,"stop":1683651111623,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651111623,"stop":1683651111867,"duration":244},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"singerpie"},{"name":"password","value":"3xT&9G380b4z"},{"name":"email","value":"monilvsluisnmidasonline"},{"name":"description","value":"I'm interested in a modern website design"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651111867,"stop":1683651111910,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651112149,"stop":1683651112193,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651112194,"stop":1683651112430,"duration":236},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"chocolatebar"},{"name":"password","value":"1Oq5PT8&V0RE"},{"name":"email","value":""},{"name":"description","value":"I'm looking for a vintage logo design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651112430,"stop":1683651112464,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651112701,"stop":1683651112739,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651112740,"stop":1683651113011,"duration":271},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"pigwall·e"},{"name":"password","value":"ixX56x3&B9Ht"},{"name":"email","value":"kubrick14@gmailvn.@net"},{"name":"description","value":"I'm looking for a minimalist packaging design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651113011,"stop":1683651113046,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651113270,"stop":1683651113310,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651113310,"stop":1683651114349,"duration":1039},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"oysterduck"},{"name":"password","value":"0L202^Rrv44k"},{"name":"email","value":"rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com"},{"name":"description","value":"I'm interested in a retro poster design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651114349,"stop":1683651114382,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651114610,"stop":1683651114665,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683651114665,"stop":1683651114912,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"doomsayer"},{"name":"password","value":"$6sVL31j8H0y"},{"name":"email","value":"theipwn3g@"},{"name":"description","value":"I'm looking for a modern branding design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683651114912,"stop":1683651114949,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683651115177,"stop":1683651115218,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"ed393fc2e9eaf13d","name":"Page status after registration with multiple invalid email addresses","source":"ed393fc2e9eaf13d.png","type":"image/png","size":220632},{"uid":"c68e37add5c78492","name":"Page status after registration with multiple invalid email addresses","source":"c68e37add5c78492.png","type":"image/png","size":221335},{"uid":"17cdeac1a32f0312","name":"Page status after registration with multiple invalid email addresses","source":"17cdeac1a32f0312.png","type":"image/png","size":221631},{"uid":"d682c5d7025e357e","name":"Page status after registration with multiple invalid email addresses","source":"d682c5d7025e357e.png","type":"image/png","size":223047},{"uid":"7a562d9df37e6e57","name":"Page status after registration with multiple invalid email addresses","source":"7a562d9df37e6e57.png","type":"image/png","size":220473},{"uid":"b210992ecd65baea","name":"Page status after registration with multiple invalid email addresses","source":"b210992ecd65baea.png","type":"image/png","size":219641},{"uid":"c7892568a3cdb0ac","name":"Page status after registration with multiple invalid email addresses","source":"c7892568a3cdb0ac.png","type":"image/png","size":217894},{"uid":"2968eb8aa3131061","name":"Page status after registration with multiple invalid email addresses","source":"2968eb8aa3131061.png","type":"image/png","size":220579},{"uid":"b1d285f6e159ecf5","name":"Page status after registration with multiple invalid email addresses","source":"b1d285f6e159ecf5.png","type":"image/png","size":222107},{"uid":"7218531e36756186","name":"Page status after registration with multiple invalid email addresses","source":"7218531e36756186.png","type":"image/png","size":219335}],"parameters":[],"stepsCount":31,"attachmentsCount":10,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1683651115219,"stop":1683651115320,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"REP03"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:functionTests.RepeatedSerialDataEntryFromDataSourceTest]/[method:registerMultipleInvalidEmailUsersTest()]"},{"name":"epic","value":"'Repeated serial data entry from data source' functions - These tests covers the verification of the possibility to perform multiple inputs from data stored in a file."},{"name":"story","value":"Multiple invalid users register - User registers multiple accounts from invalid email credentials stored in a file."},{"name":"host","value":"fv-az484-858"},{"name":"thread","value":"2357@fv-az484-858.ForkJoinPool-1-worker-1(24)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"testClass","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"testMethod","value":"registerMultipleInvalidEmailUsersTest"},{"name":"suite","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"severity","value":"trivial"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"trivial","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"d078a4ae1eb8de7c","reportUrl":"https://horvyjoe.github.io/CodeCool-Vizsgaremek/51//#testresult/d078a4ae1eb8de7c","status":"failed","statusDetails":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","time":{"start":1683641941573,"stop":1683641948763,"duration":7190}},{"uid":"5e27249e4e2b9a06","reportUrl":"https://horvyjoe.github.io/CodeCool-Vizsgaremek/50//#testresult/5e27249e4e2b9a06","status":"failed","statusDetails":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)","time":{"start":1683583893838,"stop":1683583902456,"duration":8618}}]},"tags":["REP03"]},"source":"c967bad88664e453.json","parameterValues":[]}