{"uid":"d078a4ae1eb8de7c","name":"Multiple invalid users register","fullName":"functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest","historyId":"c7fb0c2d21c453b6808744a6610c0991","time":{"start":1683641941573,"stop":1683641948763,"duration":7190},"description":"Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.","descriptionHtml":"<p>Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.</p>\n","status":"failed","statusMessage":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","statusTrace":"org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:129)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1311)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1841)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1806)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeAll","time":{"start":1683641927900,"stop":1683641927910,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1683641941573,"stop":1683641941848,"duration":275},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUpPreconditionSteps","time":{"start":1683641941849,"stop":1683641942163,"duration":314},"status":"passed","steps":[{"name":"Navigate to URL","time":{"start":1683641941850,"stop":1683641942102,"duration":252},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Accept' button to accept 'Terms and conditions'","time":{"start":1683641942103,"stop":1683641942163,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"Multiple invalid email users register - Reading invalid email registration credentials from a file, registrations must fail.","status":"failed","statusMessage":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)","statusTrace":"org.assertj.core.error.AssertJMultipleFailuresError: \nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:124)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat functionTests.RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:129)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestMethod(InvocationInterceptor.java:118)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeNonConcurrentTasks(ForkJoinPoolHierarchicalTestExecutorService.java:172)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:152)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:202)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1311)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1841)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1806)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n","steps":[{"name":"Click 'Register' tab","time":{"start":1683641942164,"stop":1683641942204,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641942205,"stop":1683641942465,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"earthykiwicityofgod"},{"name":"password","value":"apricot"},{"name":"email","value":" 2 2 lasay64@bandtoo.com"},{"name":"description","value":"I'm looking for minimalist design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641942465,"stop":1683641942503,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641942867,"stop":1683641942916,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641942916,"stop":1683641943167,"duration":251},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"15$cúcumbérleóí!"},{"name":"password","value":"romanholiday"},{"name":"email","value":"azharmali, k001@beraxs.online"},{"name":"description","value":"I'm interested in a retro design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641943167,"stop":1683641943199,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641943431,"stop":1683641943476,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641943476,"stop":1683641943722,"duration":246},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"vegaeggcow"},{"name":"password","value":"K^m1cX411o#Jéáó*/-+"},{"name":"email","value":"shevchukp,avel@kitche,n-t,vs.ru"},{"name":"description","value":"I'm searching for a modern design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641943722,"stop":1683641943758,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641944000,"stop":1683641944038,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641944038,"stop":1683641944301,"duration":263},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"runningfox"},{"name":"password","value":"lAmqw8J51%#3"},{"name":"email","value":"bet!ty@nmm@@@hy+drody,namice...st/ore"},{"name":"description","value":"I prefer designs that have a natural, organic feel."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641944302,"stop":1683641944346,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641944583,"stop":1683641944628,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641944628,"stop":1683641944871,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"marramrye"},{"name":"password","value":"v*u@Ll5H4D27"},{"name":"email","value":"tuyana1984zeyadooo.cloud"},{"name":"description","value":"I'm interested in a minimalist logo design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641944871,"stop":1683641944908,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641945155,"stop":1683641945199,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641945200,"stop":1683641945431,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"singerpie"},{"name":"password","value":"3xT&9G380b4z"},{"name":"email","value":"monilvsluisnmidasonline"},{"name":"description","value":"I'm interested in a modern website design"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641945431,"stop":1683641945462,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641945681,"stop":1683641945725,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641945725,"stop":1683641945954,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"chocolatebar"},{"name":"password","value":"1Oq5PT8&V0RE"},{"name":"email","value":""},{"name":"description","value":"I'm looking for a vintage logo design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641945954,"stop":1683641945986,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641946223,"stop":1683641946259,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641946259,"stop":1683641946488,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"pigwall·e"},{"name":"password","value":"ixX56x3&B9Ht"},{"name":"email","value":"kubrick14@gmailvn.@net"},{"name":"description","value":"I'm looking for a minimalist packaging design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641946489,"stop":1683641946521,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641946766,"stop":1683641946807,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641946808,"stop":1683641947821,"duration":1013},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"oysterduck"},{"name":"password","value":"0L202^Rrv44k"},{"name":"email","value":"rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com"},{"name":"description","value":"I'm interested in a retro poster design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641947821,"stop":1683641947850,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641948092,"stop":1683641948127,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Type in registration credentials given in test data (username, password, email, description)","time":{"start":1683641948127,"stop":1683641948361,"duration":234},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"doomsayer"},{"name":"password","value":"$6sVL31j8H0y"},{"name":"email","value":"theipwn3g@"},{"name":"description","value":"I'm looking for a modern branding design."}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click 'Register' button","time":{"start":1683641948361,"stop":1683641948391,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Click 'Register' tab","time":{"start":1683641948614,"stop":1683641948658,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"bc60fbe60f22e56f","name":"Page status after registration with multiple invalid email addresses","source":"bc60fbe60f22e56f.png","type":"image/png","size":220630},{"uid":"d22be1abaaed9f0d","name":"Page status after registration with multiple invalid email addresses","source":"d22be1abaaed9f0d.png","type":"image/png","size":221442},{"uid":"7009a5755900a695","name":"Page status after registration with multiple invalid email addresses","source":"7009a5755900a695.png","type":"image/png","size":221738},{"uid":"6081b24158a20292","name":"Page status after registration with multiple invalid email addresses","source":"6081b24158a20292.png","type":"image/png","size":222938},{"uid":"24c3611493a2e350","name":"Page status after registration with multiple invalid email addresses","source":"24c3611493a2e350.png","type":"image/png","size":220563},{"uid":"8f14e05fb1b1fe35","name":"Page status after registration with multiple invalid email addresses","source":"8f14e05fb1b1fe35.png","type":"image/png","size":219684},{"uid":"c0ab6fe59369e1a3","name":"Page status after registration with multiple invalid email addresses","source":"c0ab6fe59369e1a3.png","type":"image/png","size":217735},{"uid":"21b49e2a7c229b54","name":"Page status after registration with multiple invalid email addresses","source":"21b49e2a7c229b54.png","type":"image/png","size":220489},{"uid":"5f1563df45e35aff","name":"Page status after registration with multiple invalid email addresses","source":"5f1563df45e35aff.png","type":"image/png","size":221999},{"uid":"f12ce92ae96e4b53","name":"Page status after registration with multiple invalid email addresses","source":"f12ce92ae96e4b53.png","type":"image/png","size":219282}],"parameters":[],"stepsCount":31,"attachmentsCount":10,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1683641948659,"stop":1683641948761,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"REG007"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:functionTests.RepeatedSerialDataEntryFromDataSourceTest]/[method:registerMultipleInvalidEmailUsersTest()]"},{"name":"epic","value":"'Repeated serial data entry from data source' functions - These tests covers the verification of the possibility to perform multiple inputs from data stored in a file."},{"name":"story","value":"Multiple invalid users register - User registers multiple accounts from invalid email credentials stored in a file."},{"name":"host","value":"fv-az622-799"},{"name":"thread","value":"2404@fv-az622-799.ForkJoinPool-1-worker-1(24)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"testClass","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"testMethod","value":"registerMultipleInvalidEmailUsersTest"},{"name":"suite","value":"functionTests.RepeatedSerialDataEntryFromDataSourceTest"},{"name":"severity","value":"trivial"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"trivial","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"5e27249e4e2b9a06","reportUrl":"https://horvyjoe.github.io/CodeCool-Vizsgaremek/50//#testresult/5e27249e4e2b9a06","status":"failed","statusDetails":"\nMultiple Failures (10 failures)\n-- failure 1 --\n[Error: registration successful with the following 'INVALID' email address: ' 2 2 lasay64@bandtoo.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 2 --\n[Error: registration successful with the following 'INVALID' email address: 'azharmali, k001@beraxs.online'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 3 --\n[Error: registration successful with the following 'INVALID' email address: 'shevchukp,avel@kitche,n-t,vs.ru'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 4 --\n[Error: registration successful with the following 'INVALID' email address: 'bet!ty@nmm@@@hy+drody,namice...st/ore'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 5 --\n[Error: registration successful with the following 'INVALID' email address: 'tuyana1984zeyadooo.cloud'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 6 --\n[Error: registration successful with the following 'INVALID' email address: 'monilvsluisnmidasonline'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 7 --\n[Error: registration successful with the following 'INVALID' email address: ''] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 8 --\n[Error: registration successful with the following 'INVALID' email address: 'kubrick14@gmailvn.@net'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 9 --\n[Error: registration successful with the following 'INVALID' email address: 'rraudse5gse4thsfraudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333raudse5gse4thsfdgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g333333333333333333333333333333333dgfd5s46e4t56dgb34nh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtnh3g33333333333333333333333333333333333hgggggggggggggggggggnh3g33333333333333333333333333333333333hggggggggggggggggggggggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555gggggggggggghhhhhhhhhhhhhhrrrrrrrrrrrrrrrrrtttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff5555555555555ttttttttttttttddddddddddddddddddddddddddddddddddddddddddddddddddddddddfffff555555555555554fkdjgfdslpp@naverly.com'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)\n-- failure 10 --\n[Error: registration successful with the following 'INVALID' email address: 'theipwn3g@'] \nexpected: false\n but was: true\nat RepeatedSerialDataEntryFromDataSourceTest.registerMultipleInvalidEmailUsersTest(RepeatedSerialDataEntryFromDataSourceTest.java:118)","time":{"start":1683583893838,"stop":1683583902456,"duration":8618}}]},"tags":["REG007"]},"source":"d078a4ae1eb8de7c.json","parameterValues":[]}